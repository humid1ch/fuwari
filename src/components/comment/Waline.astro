---
import { commentConfig } from "@/config";

interface Props {
    path: string;
}

// 将配置序列化为 JSON,避免 define:vars 问题
const walineConfigJson = JSON.stringify(commentConfig.waline);
---
<div class="relative w-full mb-8 mt-8">
  <div id="waline" data-waline-config={walineConfigJson}></div>
</div>

<link rel="stylesheet" href="/waline_css/waline.css" />

<script>
  // 全局只初始化一次事件监听
  if (typeof window.walineSetup === 'undefined') {
    window.walineSetup = true;

    // 挂载 Waline 的函数
    const mountWaline = () => {
      const el = document.querySelector('#waline');
      if (!el || !document.body.contains(el)) return;

      const configStr = el.getAttribute('data-waline-config');
      if (!configStr) return;

      let config;
      try {
        config = JSON.parse(configStr);
      } catch {
        return;
      }

      // 丢弃旧实例（不调用 destroy，避免对已移除 DOM 操作）
      if (window.walineInstance) {
        window.walineInstance = null; // 让 GC 回收
      }

      // 清空当前容器（安全，因为 el 属于当前页面）
      el.innerHTML = '';

      // 初始化新实例
      import('/public/waline_js/waline.js').then(({ init }) => {
        window.walineInstance = init({
          ...config,
          el: el,
          path: location.pathname,
        });
      }).catch(err => console.error('[waline] load error:', err));
    };

    // 首次加载
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', mountWaline);
    } else {
      mountWaline();
    }

    // 页面切换（Astro + Swup）
    document.addEventListener('astro:page-load', mountWaline);
  }
</script>
